name: CI
on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  analyze_and_test:
    name: Run Flutter analyze & test
    runs-on: self-hosted
    steps:
      - name: TELEGRAM_LOGGER
        uses: robotomize/notify-telegram@v0.2.4
        with:
          to: ${{ secrets.ZENMODE_MESSAGES_TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.ZENMODE_DEV_TELEGRAM_BOT_TOKEN }}
          message: |
            [CI] üõ†Ô∏è Starting CI...

      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Decode main .env file
        run: echo "${{ secrets.ENV_BASE64 }}" | base64 --decode > .env

      - run: flutter pub get

      - run: flutter analyze

      - run: flutter test

      - name: Sending success message to Dev channel
        if: ${{ success() }}
        uses: robotomize/notify-telegram@v0.2.4
        with:
          to: ${{ secrets.ZENMODE_MESSAGES_TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.ZENMODE_DEV_TELEGRAM_BOT_TOKEN }}
          message: |
            [CI] ‚úÖ - Analyze & Test

      - name: Sending error message to Dev channel if needed
        uses: robotomize/notify-telegram@v0.2.4
        if: ${{ failure() }}
        with:
          to: ${{ secrets.ZENMODE_MESSAGES_TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.ZENMODE_DEV_TELEGRAM_BOT_TOKEN }}
          message: |
            [CI] ‚ùå - Analyze & Test

  build_ios_app:
    name: Build iOS
    needs: [analyze_and_test]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      
      - run: flutter pub get
      
      - run: flutter build ios --release --no-codesign

      - name: Decode Fastlane iOS Environment file
        run: echo "${{ secrets.IOS_FASTLANE_EVN_FILE_BASE64 }}" | base64 --decode > ios/.env

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true
          working-directory: "ios"

      - uses: maierj/fastlane-action@v3.0.0
        with:
          lane: "build_and_upload_to_testfilght"
          subdirectory: "ios"

      - name: Sending error message to Dev channel if needed
        uses: robotomize/notify-telegram@v0.2.4
        if: ${{ success() }}
        with:
          chat: ${{ secrets.ZENMODE_MESSAGES_TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.ZENMODE_DEV_TELEGRAM_BOT_TOKEN }}
          status: ${{ job.status }}
          message: |
            [CI] ‚úÖ - iOS

      - name: Sending error message to Dev channel if needed
        uses: robotomize/notify-telegram@v0.2.4
        if: ${{ failure() }}
        with:
          chat: ${{ secrets.ZENMODE_MESSAGES_TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.ZENMODE_DEV_TELEGRAM_BOT_TOKEN }}
          status: ${{ job.status }}
          message: |
            [CI] ‚ùå - iOS

  build_android_app:
    name: Build Android
    runs-on: self-hosted
    needs: [analyze_and_test]
    steps:
      - name: Checking out to current branch
        uses: actions/checkout@v3

      - name: Setting up Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12"

      - name: Setting up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Decoding android/keystore.jks
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-zenmode.jks

      - name: Decoding android/key.properties
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES_BASE64 }}" | base64 --decode > android/key.properties

      - name: Getting dependencies
        run: flutter pub get

      - name: Building Android appbundle
        run: flutter build appbundle --verbose

      - name: Uploading to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIAL_JSON_FILE_CONTENT }}
          groups: android-testers
          file: build/app/outputs/bundle/release/app-release.aab

      - name: Sending success message to Dev channel
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.ZENMODE_MESSAGES_TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.ZENMODE_DEV_TELEGRAM_BOT_TOKEN }}
          message: |
            [CI] ‚úÖ - Android

      - name: Sending error message to Dev channel if needed
        uses: appleboy/telegram-action@master
        if: ${{ failure() }}
        with:
          to: ${{ secrets.ZENMODE_MESSAGES_TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.ZENMODE_DEV_TELEGRAM_BOT_TOKEN }}
          message: |
            [CI] ‚ùå - Android
