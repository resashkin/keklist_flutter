default_platform(:ios)

APP_IDENTIFIERS = [
  "com.sashkyn.kekable", 
  "com.sashkyn.kekable.watchkitapp",
  "com.sashkyn.kekable.widget"
]

PROVISIONING_PROFILES = {
  "com.sashkyn.kekable" => "match AppStore com.sashkyn.kekable",
  "com.sashkyn.kekable.watchkitapp" => "match AppStore com.sashkyn.kekable.watchkitapp",
  "com.sashkyn.kekable.widget" => "match AppStore com.sashkyn.kekable.widget"
}

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0,
    default_keychain: true
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

platform :ios do
  desc "Create provisioning profiles"
  lane :create_provisioning_profiles do
    match(
      username: "#{ENV["APPLE_ID"]}",
      team_id: "#{ENV["APPLE_TEAM_ID"]}",
      app_identifier: APP_IDENTIFIERS,
      git_basic_authorization: "#{ENV["FASTLANE_GITHUB_BASIC_AUTH_BASE64"]}",
      git_url: "#{ENV["FASTLANE_MATCH_GIT_URL"]}",
      type: "development"
    )
    match(
      username: "#{ENV["APPLE_ID"]}",
      team_id: "#{ENV["APPLE_TEAM_ID"]}",
      app_identifier: APP_IDENTIFIERS,
      git_basic_authorization: "#{ENV["FASTLANE_GITHUB_BASIC_AUTH_BASE64"]}",
      git_url: "#{ENV["FASTLANE_MATCH_GIT_URL"]}",
      type: "appstore",
    )
  end
end


platform :ios do
  desc "Archive, Build IPA, Signing, Upload to TestFilght"
  lane :build_and_upload_to_testfilght do
    keychain_name = ENV["TEMP_KEYCHAIN_NAME"]
    keychain_password = ENV["TEMP_KEYCHAIN_PASSWORD"]
    ensure_temp_keychain(
      keychain_name, 
      keychain_password
    )

    api_key = app_store_connect_api_key(
      key_id: "#{ENV["APPSTORE_KEY_ID"]}",
      issuer_id: "#{ENV["APPSTORE_ISSUER_ID"]}",
      key_content: "#{ENV["APPSTORE_API_KEY_CONTENT_BASE_64"]}",
      is_key_content_base64: true
    )
    match(
      username: "#{ENV["APPLE_ID"]}",
      team_id: "#{ENV["APPLE_TEAM_ID"]}",
      app_identifier: APP_IDENTIFIERS,
      git_basic_authorization: "#{ENV["FASTLANE_GITHUB_BASIC_AUTH_BASE64"]}",
      git_url: "#{ENV["FASTLANE_MATCH_GIT_URL"]}",
      type: "development",
      api_key: api_key,
      readonly: true,
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      force_for_new_devices: true
    )
    match(
      username: "#{ENV["APPLE_ID"]}",
      team_id: "#{ENV["APPLE_TEAM_ID"]}",
      app_identifier: APP_IDENTIFIERS,
      git_basic_authorization: "#{ENV["FASTLANE_GITHUB_BASIC_AUTH_BASE64"]}",
      git_url: "#{ENV["FASTLANE_MATCH_GIT_URL"]}",
      type: "appstore",
      api_key: api_key,
      readonly: true,
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      force_for_new_devices: true
    )
    cocoapods(
      repo_update: true, 
      use_bundle_exec: false
    )
    build_app(
      workspace: "Runner.xcworkspace", 
      scheme: "Runner",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: PROVISIONING_PROFILES
      },
      verbose: true
    )
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      ipa: "./Runner.ipa"
    )
  end
end

platform :ios do
  desc "Locally: Archive * Build IPA * Signing * Upload to TF"
  lane :build_and_upload_to_testfilght_from_local_machine do
    api_key = app_store_connect_api_key(
      key_id: "#{ENV["APPSTORE_KEY_ID"]}",
      issuer_id: "#{ENV["APPSTORE_ISSUER_ID"]}",
      key_content: "#{ENV["APPSTORE_API_KEY_CONTENT_BASE_64"]}",
      is_key_content_base64: true
    )
    match(
      username: "#{ENV["APPLE_ID"]}",
      team_id: "#{ENV["APPLE_TEAM_ID"]}",
      app_identifier: APP_IDENTIFIERS,
      git_basic_authorization: "#{ENV["FASTLANE_GITHUB_BASIC_AUTH_BASE64"]}",
      git_url: "#{ENV["FASTLANE_MATCH_GIT_URL"]}",
      type: "development",
      api_key: api_key,
      readonly: false,
    )
    match(
      username: "#{ENV["APPLE_ID"]}",
      team_id: "#{ENV["APPLE_TEAM_ID"]}",
      app_identifier: APP_IDENTIFIERS,
      git_basic_authorization: "#{ENV["FASTLANE_GITHUB_BASIC_AUTH_BASE64"]}",
      git_url: "#{ENV["FASTLANE_MATCH_GIT_URL"]}",
      type: "appstore",
      api_key: api_key,
      readonly: false,
    )
    cocoapods(
      repo_update: true, 
      use_bundle_exec: false
    )
    build_app(
      workspace: "Runner.xcworkspace", 
      scheme: "Runner",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: PROVISIONING_PROFILES
      },
      verbose: true
    )
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      ipa: "./Runner.ipa"
    )
  end
end
